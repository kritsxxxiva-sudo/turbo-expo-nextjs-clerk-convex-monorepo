openapi: 3.0.3
info:
  title: Payments API
  description: Stripe payment processing integration API contracts
  version: 1.0.0
  contact:
    name: Development Team
    email: dev@example.com

servers:
  - url: https://api.convex.dev
    description: Convex API Server

paths:
  /api/payments/customer:
    get:
      summary: Get customer information
      description: Retrieve the current user's Stripe customer information
      operationId: getCustomer
      security:
        - ClerkJWT: []
      responses:
        '200':
          description: Customer information retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Customer not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    post:
      summary: Create customer
      description: Create a new Stripe customer for the authenticated user
      operationId: createCustomer
      security:
        - ClerkJWT: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCustomerRequest'
      responses:
        '201':
          description: Customer created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Customer already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/payments/payment-intent:
    post:
      summary: Create payment intent
      description: Create a new Stripe payment intent for one-time payment
      operationId: createPaymentIntent
      security:
        - ClerkJWT: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePaymentIntentRequest'
      responses:
        '201':
          description: Payment intent created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentIntentResponse'
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/payments/subscriptions:
    get:
      summary: Get user subscriptions
      description: Retrieve all subscriptions for the authenticated user
      operationId: getUserSubscriptions
      security:
        - ClerkJWT: []
      responses:
        '200':
          description: Subscriptions retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  subscriptions:
                    type: array
                    items:
                      $ref: '#/components/schemas/Subscription'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    post:
      summary: Create subscription
      description: Create a new subscription for the authenticated user
      operationId: createSubscription
      security:
        - ClerkJWT: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSubscriptionRequest'
      responses:
        '201':
          description: Subscription created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/payments/subscriptions/{subscriptionId}/cancel:
    post:
      summary: Cancel subscription
      description: Cancel a user's subscription
      operationId: cancelSubscription
      security:
        - ClerkJWT: []
      parameters:
        - name: subscriptionId
          in: path
          required: true
          schema:
            type: string
          description: Convex subscription document ID
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                cancelAtPeriodEnd:
                  type: boolean
                  description: Whether to cancel at the end of the current period
                  default: true
      responses:
        '200':
          description: Subscription canceled successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Subscription not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/payments/customer-portal:
    post:
      summary: Create customer portal session
      description: Create a Stripe customer portal session for billing management
      operationId: createCustomerPortalSession
      security:
        - ClerkJWT: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                returnUrl:
                  type: string
                  format: uri
                  description: URL to redirect to after portal session
                  example: "https://app.example.com/billing"
      responses:
        '200':
          description: Customer portal session created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  url:
                    type: string
                    format: uri
                    description: Customer portal session URL
                    example: "https://billing.stripe.com/session/abc123"
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/payments/webhooks/stripe:
    post:
      summary: Process Stripe webhook
      description: Handle incoming Stripe webhook events
      operationId: processStripeWebhook
      security:
        - StripeWebhookSignature: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StripeWebhookPayload'
      responses:
        '200':
          description: Webhook processed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Webhook processed successfully"
        '400':
          description: Invalid webhook payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Invalid webhook signature
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  securitySchemes:
    ClerkJWT:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: Clerk JWT token for user authentication
    StripeWebhookSignature:
      type: apiKey
      in: header
      name: stripe-signature
      description: Stripe webhook signature for verification

  schemas:
    Customer:
      type: object
      required:
        - _id
        - userId
        - stripeCustomerId
        - email
        - currency
        - createdAt
        - updatedAt
      properties:
        _id:
          type: string
          description: Convex document ID
        userId:
          type: string
          description: Reference to user document
        stripeCustomerId:
          type: string
          description: Stripe customer ID
          example: "cus_ABC123"
        email:
          type: string
          format: email
          description: Customer email
        name:
          type: string
          nullable: true
          description: Customer name
        defaultPaymentMethodId:
          type: string
          nullable: true
          description: Default payment method ID
        currency:
          type: string
          description: Customer currency (ISO 4217)
          example: "usd"
        address:
          $ref: '#/components/schemas/Address'
        createdAt:
          type: number
          description: Creation timestamp
        updatedAt:
          type: number
          description: Last update timestamp

    Subscription:
      type: object
      required:
        - _id
        - userId
        - customerId
        - stripeSubscriptionId
        - stripePriceId
        - status
        - currentPeriodStart
        - currentPeriodEnd
        - cancelAtPeriodEnd
        - quantity
        - createdAt
        - updatedAt
      properties:
        _id:
          type: string
          description: Convex document ID
        userId:
          type: string
          description: Reference to user document
        customerId:
          type: string
          description: Reference to customer document
        stripeSubscriptionId:
          type: string
          description: Stripe subscription ID
          example: "sub_ABC123"
        stripePriceId:
          type: string
          description: Stripe price ID
          example: "price_ABC123"
        status:
          type: string
          enum: [active, canceled, incomplete, incomplete_expired, past_due, trialing, unpaid]
          description: Subscription status
        currentPeriodStart:
          type: number
          description: Current period start timestamp
        currentPeriodEnd:
          type: number
          description: Current period end timestamp
        cancelAtPeriodEnd:
          type: boolean
          description: Whether subscription cancels at period end
        canceledAt:
          type: number
          nullable: true
          description: Cancellation timestamp
        trialStart:
          type: number
          nullable: true
          description: Trial start timestamp
        trialEnd:
          type: number
          nullable: true
          description: Trial end timestamp
        quantity:
          type: integer
          minimum: 1
          description: Subscription quantity
        createdAt:
          type: number
          description: Creation timestamp
        updatedAt:
          type: number
          description: Last update timestamp

    Address:
      type: object
      required:
        - line1
        - city
        - postalCode
        - country
      properties:
        line1:
          type: string
          description: Address line 1
        line2:
          type: string
          nullable: true
          description: Address line 2
        city:
          type: string
          description: City
        state:
          type: string
          nullable: true
          description: State or province
        postalCode:
          type: string
          description: Postal or ZIP code
        country:
          type: string
          description: Country code (ISO 3166-1)

    CreateCustomerRequest:
      type: object
      required:
        - email
      properties:
        email:
          type: string
          format: email
          description: Customer email address
        name:
          type: string
          nullable: true
          description: Customer name
        address:
          $ref: '#/components/schemas/Address'

    CreatePaymentIntentRequest:
      type: object
      required:
        - amount
        - currency
      properties:
        amount:
          type: integer
          minimum: 50
          description: Payment amount in smallest currency unit
          example: 2000
        currency:
          type: string
          description: Payment currency (ISO 4217)
          example: "usd"
        description:
          type: string
          nullable: true
          description: Payment description
        metadata:
          type: object
          additionalProperties:
            type: string
          description: Additional metadata

    CreateSubscriptionRequest:
      type: object
      required:
        - priceId
      properties:
        priceId:
          type: string
          description: Stripe price ID
          example: "price_ABC123"
        quantity:
          type: integer
          minimum: 1
          default: 1
          description: Subscription quantity
        trialPeriodDays:
          type: integer
          minimum: 1
          nullable: true
          description: Trial period in days

    PaymentIntentResponse:
      type: object
      required:
        - id
        - clientSecret
        - amount
        - currency
        - status
      properties:
        id:
          type: string
          description: Payment intent ID
        clientSecret:
          type: string
          description: Client secret for frontend confirmation
        amount:
          type: integer
          description: Payment amount
        currency:
          type: string
          description: Payment currency
        status:
          type: string
          description: Payment intent status

    StripeWebhookPayload:
      type: object
      required:
        - id
        - type
        - data
      properties:
        id:
          type: string
          description: Webhook event ID
        type:
          type: string
          description: Webhook event type
        data:
          type: object
          description: Event data payload
          additionalProperties: true

    Error:
      type: object
      required:
        - error
        - message
      properties:
        error:
          type: string
          description: Error code
        message:
          type: string
          description: Human-readable error message
        details:
          type: object
          additionalProperties: true
          description: Additional error details

    ValidationError:
      type: object
      required:
        - error
        - message
        - validationErrors
      properties:
        error:
          type: string
          description: Error code
          example: "VALIDATION_ERROR"
        message:
          type: string
          description: Human-readable error message
        validationErrors:
          type: array
          items:
            type: object
            required:
              - field
              - message
            properties:
              field:
                type: string
                description: Field name with validation error
              message:
                type: string
                description: Validation error message
